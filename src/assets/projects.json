[
  {
    "title": "Crypto Exchange",
    "source": "https://github.com/rcamach7/crypto-exchange",
    "live": "https://rcamach7.github.io/crypto-exchange/#/",
    "gif": "https://res.cloudinary.com/de2ymful4/image/upload/v1655159161/main-portfolio/projects/crypto_demo_qlqb7o.gif",
    "still": "https://res.cloudinary.com/de2ymful4/image/upload/v1655150813/main-portfolio/projects/crypto_still_d4dsjm.png",
    "technologies": [
      "Typescript",
      "React",
      "MUI Components",
      "NodeJS",
      "Express",
      "MongoDB"
    ],
    "bulletPoints": [
      "Users can view, purchase and sell crypto coins at real-time market prices. They mau also view their total investment performances, or a breakdown of their individual coin investment(s). When browsing cryptos, they can filter and sort the data displayed to their liking.",
      "UI built with Typescript + React. Utilized MUI Components, styled components, and SCSS for a responsive UX.",
      "Back end server built with Node, Express, and MongoDB, using a 3rd party API to obtain real-time crypto prices.",
      "Implemented user authentication, data validation/sanitation on client and server, protected routes, custom React hooks, lifecycle hooks, error handling on API calls, and much more."
    ]
  },
  {
    "title": "Instant Messaging App",
    "source": "https://github.com/rcamach7/instant-messenger",
    "live": "https://rcamach7.github.io/instant-messenger/#/instant-messenger",
    "gif": "https://res.cloudinary.com/de2ymful4/image/upload/v1655167412/main-portfolio/projects/instantMessenger_demo_m5cvzk.gif",
    "still": "https://res.cloudinary.com/de2ymful4/image/upload/v1655159961/main-portfolio/projects/messenger_still_rrlsye.png",
    "technologies": ["React", "SocketIO", "Javascript", "SCSS"],
    "bulletPoints": [
      "Real-time messaging established by creating web socket connections with my social media api server, enabling instant communication.",
      "User authentication and security implemented with JWT Tokens, which were also used to protect routes against un-authenticated users. Custom form validation and sanitation also implemented before processing requests.",
      "Uses my social media api for the backend to allow users to use my facebook clone with the exact same credentials, carrying over all user data, like friends, messages, and posts."
    ]
  },
  {
    "title": "Facebook Clone",
    "source": "https://github.com/rcamach7/facebook-clone",
    "live": "https://rcamach7.github.io/facebook-clone/",
    "gif": "https://res.cloudinary.com/de2ymful4/image/upload/v1655167109/main-portfolio/projects/facebook_demo_ijou3l.gif",
    "still": "https://res.cloudinary.com/de2ymful4/image/upload/v1655162356/main-portfolio/projects/facebook_still_hupupa.png",
    "technologies": ["React", "Javascript", "HTML", "SASS"],
    "bulletPoints": [
      "Utilizes react lifecycle methods, react hooks for state management, and custom hooks to serve specific application needs.",
      "Routing implemented with protected routes against un-authenticated users. Data validation and sanitation also performed client side before interacting with backend API.",
      "Uses my social media api for the backend to allow users to use my instant messaging app with the exact same credentials, carrying over all user data, like friends, messages, and posts."
    ]
  },
  {
    "title": "Social Media API",
    "source": "https://github.com/rcamach7/social-media-api",
    "live": "https://fb-messenger-api.herokuapp.com",
    "gif": "https://res.cloudinary.com/de2ymful4/image/upload/v1655168192/main-portfolio/projects/socialMediaApi_still_e5ygtc.png",
    "still": "https://res.cloudinary.com/de2ymful4/image/upload/v1655168192/main-portfolio/projects/socialMediaApi_still_e5ygtc.png",
    "technologies": ["NodeJS", "ExpressJS", "MongoDB", "Mongoose"],
    "bulletPoints": [
      "A RESTful API that serves both of my keystone web applications: Instant Messenger and Facebook Clone",
      "Users maintain same information across both applications, allowing them to sign in with the same credentials, and maintain their friends across both platforms.",
      "Creates socket connections with users in Messenger app to notify users of new messages, giving them instant messaging capabilities.",
      "RESTful API that performs CRUD operations on the following endpoints; users, posts, messages, and friends."
    ]
  }
]
